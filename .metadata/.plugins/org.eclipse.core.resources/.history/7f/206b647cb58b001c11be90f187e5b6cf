package br.Model;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

public class IPVADao {




public IPVADao (){
}




public void insert(Carros carrosipva) {
	Conexao c = Conexao.getInstance();
	Connection con = c.getConnection();
	try {
		PreparedStatement p = con.prepareStatement("insert into ipva (AnoIPVA) values (?)");
		p.setString(1, carrosipva.getAnoIPVA());
		System.out.println(p);
		p.executeUpdate();
		System.out.println("Comando executado");
		p.close();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
}

public ArrayList<Carros> selectAll(){
	Conexao c = Conexao.getInstance();
	Connection con = c.getConnection();
	ArrayList<Carros> listaIPVA = new ArrayList<Carros>();
	try {
		PreparedStatement p = con.prepareStatement("select * from ipva");
		ResultSet r = p.executeQuery();			
		
		while (r.next()) {
			Integer idIPVA = r.getInt("idIPVA");
			String anoIPVA = r.getString("anoIPVA");
			Carros caIPVA = new Carros(anoIPVA);
			caIPVA.setId(idIPVA);
			listaIPVA.add(caIPVA);
		}
		r.close();
		p.close();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return listaIPVA;
}

public void removeIPVA(Integer idIPVA) {
	Conexao c = Conexao.getInstance();
	Connection con = c.getConnection();
	
	try {
		PreparedStatement p = con.prepareStatement("delete from ipva where idIPVA = ?");
		p.setInt(1, idIPVA);
		System.out.println(p);
		p.executeUpdate();
		System.out.println("Comando executado");
		p.close();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}


//public void updateUser(Integer id, String newName) {
public void updateCarros(Carros updateIPVA) {
	Conexao c = Conexao.getInstance();
	Connection con = c.getConnection();
	
	try {
		PreparedStatement p = con.prepareStatement("update ipva set AnoIPVA = ?,  where idIPVA = ?");
		p.setString(1, updateIPVA.getAnoIPVA());
		p.setInt(3, updateIPVA.getIdIPVA());
		System.out.println(p);
		p.executeUpdate();
		System.out.println("Comando executado");
		p.close();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
}
	
public Carros selectById(Integer idIPVA) {
	Conexao c = Conexao.getInstance();
	Connection con = c.getConnection();
	Carros caIPVA = null;
	try {
		PreparedStatement p = con.prepareStatement("select * from ipva where ID = ?");
		p.setInt(1, idIPVA);
		ResultSet r = p.executeQuery();			
		
		
		while (r.next()) {
			//Integer id2 = r.getInt("id");
			String ano = r.getString("ano");
			String modelo = r.getString("modelo");
			caIPVA = new Carros(ano, modelo);
			caIPVA.setIdIPVA(idIPVA);
		}
		r.close();
		p.close();
	} catch (SQLException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	return caIPVA;
}
}